<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
				        http://www.springframework.org/schema/context 
				        http://www.springframework.org/schema/context/spring-context-3.2.xsd 
				        http://www.springframework.org/schema/util 
				        http://www.springframework.org/schema/util/spring-util-3.2.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
						http://www.springframework.org/schema/jdbc
						http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd">

	<!-- 通过注解控制事务 -->
	<tx:annotation-driven />

	<!-- ==========================in-memory database================================== -->
	<beans profile="production">
		<!-- in-memory database and a datasource -->
		<jdbc:embedded-database id="memoryDataSource">
			<jdbc:script
				location="classpath:cn/com/bettle/logic/memorydb/database-schema.sql" />
		</jdbc:embedded-database>

		<!-- transaction manager, use JtaTransactionManager for global tx -->
		<bean id="memoryTransactionManager"
			class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="memoryDataSource" />
		</bean>

		<!-- define the MyBatis SqlSessionFactory -->
		<bean id="memoryMybatis" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="memoryDataSource" />
			<property name="configLocation" value="classpath:mybatis-config.xml" />
		</bean>


		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
			init-method="init" destroy-method="close">
			<!-- 基本属性 url、user、password -->
			<property name="url" value="${mysql.url}" />
			<property name="username" value="${mysql.user}" />
			<property name="password" value="${mysql.password}" />
			<!-- 配置初始化大小、最小、最大 -->
			<property name="initialSize" value="${mysql.initialPoolSize}" />
			<property name="maxActive" value="${mysql.maxPoolSize}" />
			<!-- 配置获取连接等待超时的时间 -->
			<property name="maxWait" value="60000" />
			<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
			<property name="timeBetweenEvictionRunsMillis" value="60000" />
			<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
			<property name="minEvictableIdleTimeMillis" value="300000" />

			<property name="validationQuery" value="SELECT 1 FROM DUAL" />
			<property name="testWhileIdle" value="true" />
			<property name="testOnBorrow" value="false" />
			<property name="testOnReturn" value="false" />

			<property name="removeAbandoned" value="true" />
			<property name="removeAbandonedTimeout" value="1800" />

			<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
			<property name="poolPreparedStatements" value="true" />
			<property name="maxPoolPreparedStatementPerConnectionSize"
				value="20" />

			<!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
			<property name="filters" value="stat" />
		</bean>

		<bean id="transactionManager"
			class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource" />
		</bean>

		<bean id="mysqlMybatis" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="configLocation" value="classpath:mybatis-config.xml" />
		</bean>

		<!-- 映射权限相关的dao -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="annotationClass" value="org.springframework.stereotype.Repository" />
			<property name="basePackage" value="cn.com.bettle.logic.mapper" />
			<property name="sqlSessionFactoryBeanName" value="mysqlMybatis" />
		</bean>
	</beans>

</beans>
